# import Track, TrackConnection from "../../generated/prisma.graphql"

scalar Duration
scalar NonEmptyString

type Query {
  track(id: ID!): Track
  tracks(first: Int, last: Int, before: ID, after: ID): TrackConnection
}

type Mutation {
  createTrack(input: TrackCreatePayload!): Track
  deleteTrack(id: ID!): Track
  updateTrack(input: TrackUpdatePayload!): Track
}

type Subscription {
  trackCreated: Track
}

input ArtworkPayload {
  url: NonEmptyString!
}

input AlbumPayload {
  alias: NonEmptyString!
  artwork: ArtworkPayload!
  duration: Duration!
  name: NonEmptyString!
  numTracks: Int!
  releaseDate: DateTime!
  releaseType: ReleaseType!
}

input ArtistPayload {
  alias: NonEmptyString!
  name: NonEmptyString!
}

input TrackCreatePayload {
  album: AlbumPayload!
  artists: [ArtistPayload!]!
  duration: Duration!
  featuring: [ArtistPayload!]
  name: NonEmptyString!
  trackNumber: Int!
}

input TrackUpdatePayload {
  id: ID!
  artists: [ArtistPayload!]!
  duration: Duration!
  featuring: [ArtistPayload!]
  name: NonEmptyString!
  trackNumber: Int!
}
